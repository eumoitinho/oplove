{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(npm install:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(pnpm add:*)",
      "Bash(npm run dev:*)",
      "Bash(mv:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(git checkout:*)",
      "Bash(git restore:*)",
      "Bash(pnpm dev:*)",
      "Bash(del \"D:\\MSYNC PESSOAL\\oplove\\nul\")",
      "Bash(node:*)",
      "Bash(curl:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(wmic:*)",
      "Bash(taskkill:*)",
      "Bash(powershell:*)",
      "Bash(powershell:*)",
      "Bash(del fix-stories-*.ps1)",
      "Bash(npx supabase:*)",
      "Bash(npm run build:*)",
      "Bash(echo \"-- Add missing RLS policies for story_daily_limits\n\n-- Drop and recreate policies for story_daily_limits table\nDROP POLICY IF EXISTS \"\"Users can view own daily limits\"\" ON story_daily_limits;\nDROP POLICY IF EXISTS \"\"Users can insert own daily limits\"\" ON story_daily_limits;\nDROP POLICY IF EXISTS \"\"Users can update own daily limits\"\" ON story_daily_limits;\n\nCREATE POLICY \"\"Users can view own daily limits\"\" ON story_daily_limits\n    FOR SELECT USING (user_id = auth.uid());\n\nCREATE POLICY \"\"Users can insert own daily limits\"\" ON story_daily_limits\n    FOR INSERT WITH CHECK (user_id = auth.uid());\n\nCREATE POLICY \"\"Users can update own daily limits\"\" ON story_daily_limits\n    FOR UPDATE USING (user_id = auth.uid());\n\n-- Add missing policies for user_credits table\nDROP POLICY IF EXISTS \"\"Users can insert own credits\"\" ON user_credits;\nDROP POLICY IF EXISTS \"\"Users can update own credits\"\" ON user_credits;\n\nCREATE POLICY \"\"Users can insert own credits\"\" ON user_credits\n    FOR INSERT WITH CHECK (user_id = auth.uid());\n\nCREATE POLICY \"\"Users can update own credits\"\" ON user_credits\n    FOR UPDATE USING (user_id = auth.uid());\n\n-- Add missing policy for user_credit_transactions\nDROP POLICY IF EXISTS \"\"Users can insert own transactions\"\" ON user_credit_transactions;\n\nCREATE POLICY \"\"Users can insert own transactions\"\" ON user_credit_transactions\n    FOR INSERT WITH CHECK (user_id = auth.uid());\n\n-- Add missing CHECK policies for INSERT operations\nCREATE POLICY \"\"Users can create stories with auth check\"\" ON stories\n    FOR INSERT WITH CHECK (user_id = auth.uid());\n\nCREATE POLICY \"\"Users can view and react to stories\"\" ON story_views\n    FOR INSERT WITH CHECK (viewer_id = auth.uid());\n\nCREATE POLICY \"\"Users can send story replies with auth\"\" ON story_replies\n    FOR INSERT WITH CHECK (sender_id = auth.uid());\n\nCREATE POLICY \"\"Users can create story boosts with auth\"\" ON story_boosts\n    FOR INSERT WITH CHECK (user_id = auth.uid());\n\n-- Verification query\nSELECT ''RLS policies updated!'' as status;\")",
      "Bash(del nul)",
      "Bash(pnpm update:*)",
      "Bash(grep:*)",
      "Bash(npx tsx:*)",
      "Bash(pnpm install:*)",
      "Bash(git push:*)",
      "Bash(pnpm supabase db:*)",
      "WebFetch(domain:github.com)",
      "Bash(npx tsc:*)",
      "Bash(pnpm build:*)",
      "Bash(pnpm type-check:*)",
      "Bash(gunzip:*)",
      "Bash(del \"D:\\MSYNC PESSOAL\\oplove\\supabase\\migrations\\temp_backup.sql\")",
      "Bash(del test-register.js test-simple-register.js)",
      "Bash(set:*)",
      "Bash(cat:*)",
      "Bash(nslookup:*)",
      "Bash(ping:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run type-check:*)"
    ],
    "deny": []
  }
}