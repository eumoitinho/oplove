-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.ad_campaigns (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_id uuid,
  name character varying NOT NULL,
  description text,
  objective USER-DEFINED NOT NULL,
  total_budget integer NOT NULL,
  daily_budget integer,
  spent_credits integer DEFAULT 0,
  start_date timestamp with time zone NOT NULL,
  end_date timestamp with time zone NOT NULL,
  schedule_hours ARRAY,
  schedule_days ARRAY,
  targeting jsonb NOT NULL DEFAULT '{"location": {"cities": [], "states": [], "radius_km": null, "exclude_locations": []}, "behaviors": {"verified_only": false, "active_last_days": 30, "premium_users_only": false}, "interests": [], "demographics": {"age_max": 65, "age_min": 18, "genders": [], "relationship_status": []}}'::jsonb,
  metrics jsonb DEFAULT '{"cpc": 0, "ctr": 0, "roi": 0, "spent": 0, "clicks": 0, "conversions": 0, "impressions": 0}'::jsonb,
  optimization_goal character varying,
  bid_strategy character varying DEFAULT 'automatic'::character varying,
  max_bid_amount integer,
  status USER-DEFINED DEFAULT 'draft'::ad_status,
  approval_status character varying DEFAULT 'pending'::character varying,
  rejection_reasons ARRAY,
  approved_at timestamp with time zone,
  paused_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ad_campaigns_pkey PRIMARY KEY (id),
  CONSTRAINT ad_campaigns_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id)
);
CREATE TABLE public.ad_impressions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  ad_id uuid,
  user_id uuid,
  was_clicked boolean DEFAULT false,
  click_timestamp timestamp with time zone,
  placement character varying,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ad_impressions_pkey PRIMARY KEY (id),
  CONSTRAINT ad_impressions_ad_id_fkey FOREIGN KEY (ad_id) REFERENCES public.advertisements(id),
  CONSTRAINT ad_impressions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.ad_interactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  ad_id uuid,
  campaign_id uuid,
  user_id uuid,
  interaction_type character varying NOT NULL CHECK (interaction_type::text = ANY (ARRAY['impression'::character varying, 'click'::character varying, 'conversion'::character varying, 'dismiss'::character varying, 'report'::character varying]::text[])),
  placement character varying NOT NULL,
  device_type character varying,
  click_position jsonb,
  time_to_click integer,
  conversion_type character varying,
  conversion_value numeric,
  user_location point,
  distance_from_business double precision,
  user_agent text,
  ip_address inet,
  referrer text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ad_interactions_pkey PRIMARY KEY (id),
  CONSTRAINT ad_interactions_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES public.ad_campaigns(id),
  CONSTRAINT ad_interactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT ad_interactions_ad_id_fkey FOREIGN KEY (ad_id) REFERENCES public.business_ads(id)
);
CREATE TABLE public.admin_action_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  admin_id uuid,
  action USER-DEFINED NOT NULL,
  action_description text NOT NULL,
  target_type character varying NOT NULL,
  target_id uuid,
  target_data jsonb,
  changes jsonb,
  reason text,
  notes text,
  ip_address inet NOT NULL,
  user_agent text,
  request_id uuid,
  was_successful boolean DEFAULT true,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT admin_action_logs_pkey PRIMARY KEY (id),
  CONSTRAINT admin_action_logs_admin_id_fkey FOREIGN KEY (admin_id) REFERENCES public.admin_users(id)
);
CREATE TABLE public.admin_metrics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  metric_date date NOT NULL,
  metric_hour integer,
  total_users integer DEFAULT 0,
  new_users integer DEFAULT 0,
  active_users integer DEFAULT 0,
  premium_users integer DEFAULT 0,
  verified_users integer DEFAULT 0,
  revenue_total numeric DEFAULT 0,
  revenue_subscriptions numeric DEFAULT 0,
  revenue_credits numeric DEFAULT 0,
  revenue_content numeric DEFAULT 0,
  refunds_total numeric DEFAULT 0,
  posts_created integer DEFAULT 0,
  posts_removed integer DEFAULT 0,
  messages_sent integer DEFAULT 0,
  reports_created integer DEFAULT 0,
  reports_resolved integer DEFAULT 0,
  users_banned integer DEFAULT 0,
  content_removed integer DEFAULT 0,
  businesses_total integer DEFAULT 0,
  businesses_new integer DEFAULT 0,
  businesses_verified integer DEFAULT 0,
  ads_served integer DEFAULT 0,
  dating_profiles_active integer DEFAULT 0,
  swipes_total integer DEFAULT 0,
  matches_created integer DEFAULT 0,
  api_requests integer DEFAULT 0,
  api_errors integer DEFAULT 0,
  average_response_time double precision,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT admin_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.admin_users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid UNIQUE,
  employee_id character varying UNIQUE,
  full_name character varying NOT NULL,
  access_level integer NOT NULL CHECK (access_level >= 1 AND access_level <= 5),
  departments ARRAY NOT NULL,
  is_department_head boolean DEFAULT false,
  permissions jsonb NOT NULL DEFAULT '{"users": {"ban": false, "edit": false, "view": false, "delete": false, "impersonate": false}, "system": {"logs": false, "backups": false, "settings": false}, "content": {"view": false, "delete": false, "moderate": false}, "business": {"view": false, "verify": false, "suspend": false}, "financial": {"view": false, "refund": false, "reports": false}}'::jsonb,
  last_login timestamp with time zone,
  last_ip inet,
  login_count integer DEFAULT 0,
  actions_count integer DEFAULT 0,
  two_factor_enabled boolean DEFAULT false,
  two_factor_secret character varying,
  password_changed_at timestamp with time zone DEFAULT now(),
  must_change_password boolean DEFAULT false,
  is_active boolean DEFAULT true,
  deactivated_at timestamp with time zone,
  deactivation_reason text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT admin_users_pkey PRIMARY KEY (id),
  CONSTRAINT admin_users_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.advertisements (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  advertiser_id uuid,
  title character varying NOT NULL,
  content text,
  media_url text,
  cta_text character varying,
  cta_url text,
  target_age_min integer,
  target_age_max integer,
  target_genders ARRAY,
  target_locations ARRAY DEFAULT '{}'::text[],
  target_interests ARRAY DEFAULT '{}'::text[],
  budget numeric,
  cost_per_impression numeric,
  cost_per_click numeric,
  impressions integer DEFAULT 0,
  clicks integer DEFAULT 0,
  status USER-DEFINED DEFAULT 'pending'::ad_status,
  starts_at timestamp with time zone,
  ends_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT advertisements_pkey PRIMARY KEY (id),
  CONSTRAINT advertisements_advertiser_id_fkey FOREIGN KEY (advertiser_id) REFERENCES public.users(id)
);
CREATE TABLE public.blocked_users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  blocker_id uuid,
  blocked_id uuid,
  reason text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT blocked_users_pkey PRIMARY KEY (id),
  CONSTRAINT blocked_users_blocked_id_fkey FOREIGN KEY (blocked_id) REFERENCES public.users(id),
  CONSTRAINT blocked_users_blocker_id_fkey FOREIGN KEY (blocker_id) REFERENCES public.users(id)
);
CREATE TABLE public.business_ads (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  campaign_id uuid,
  business_id uuid,
  format USER-DEFINED NOT NULL,
  placement_priority integer DEFAULT 5,
  content jsonb NOT NULL,
  variations jsonb DEFAULT '[]'::jsonb,
  winning_variation integer,
  impressions integer DEFAULT 0,
  unique_impressions integer DEFAULT 0,
  clicks integer DEFAULT 0,
  unique_clicks integer DEFAULT 0,
  conversions integer DEFAULT 0,
  credits_spent integer DEFAULT 0,
  metrics_by_day jsonb DEFAULT '{}'::jsonb,
  metrics_by_hour jsonb DEFAULT '{}'::jsonb,
  metrics_by_placement jsonb DEFAULT '{}'::jsonb,
  status USER-DEFINED DEFAULT 'draft'::ad_status,
  quality_score integer,
  first_served_at timestamp with time zone,
  last_served_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT business_ads_pkey PRIMARY KEY (id),
  CONSTRAINT business_ads_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT business_ads_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES public.ad_campaigns(id)
);
CREATE TABLE public.business_team (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_id uuid,
  user_id uuid,
  role character varying NOT NULL,
  permissions jsonb DEFAULT '{}'::jsonb,
  department character varying,
  title character varying,
  is_active boolean DEFAULT true,
  joined_at timestamp with time zone DEFAULT now(),
  removed_at timestamp with time zone,
  CONSTRAINT business_team_pkey PRIMARY KEY (id),
  CONSTRAINT business_team_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT business_team_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.businesses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  owner_id uuid,
  business_type USER-DEFINED NOT NULL,
  business_name character varying NOT NULL,
  legal_name character varying,
  cnpj character varying UNIQUE,
  description text,
  short_description character varying,
  category character varying,
  subcategories ARRAY DEFAULT '{}'::text[],
  tags ARRAY DEFAULT '{}'::text[],
  address jsonb,
  coordinates point,
  business_hours jsonb,
  service_area_radius integer,
  contact jsonb NOT NULL,
  social_links jsonb DEFAULT '{}'::jsonb,
  is_verified boolean DEFAULT false,
  verified_at timestamp with time zone,
  verification_level integer DEFAULT 0,
  verification_documents ARRAY DEFAULT '{}'::text[],
  logo_url text,
  cover_image_url text,
  gallery_urls ARRAY DEFAULT '{}'::text[],
  credit_balance integer DEFAULT 0,
  total_credits_purchased integer DEFAULT 0,
  total_credits_spent integer DEFAULT 0,
  total_revenue numeric DEFAULT 0,
  settings jsonb DEFAULT '{"auto_reply": false, "allow_reviews": true, "notifications": true, "show_in_search": true}'::jsonb,
  features jsonb DEFAULT '{"max_products": 0, "can_advertise": true, "can_have_store": false, "commission_rate": 0.20, "can_sell_content": false, "can_create_events": true, "max_events_per_month": 10}'::jsonb,
  stats jsonb DEFAULT '{"total_sales": 0, "total_views": 0, "total_reviews": 0, "average_rating": 0, "total_followers": 0}'::jsonb,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'active'::character varying, 'suspended'::character varying, 'banned'::character varying]::text[])),
  suspension_reason text,
  slug character varying UNIQUE,
  meta_description text,
  meta_keywords ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  last_active_at timestamp with time zone DEFAULT now(),
  CONSTRAINT businesses_pkey PRIMARY KEY (id),
  CONSTRAINT businesses_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.users(id)
);
CREATE TABLE public.calls (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  conversation_id uuid,
  caller_id uuid,
  call_type USER-DEFINED NOT NULL,
  status USER-DEFINED DEFAULT 'ringing'::call_status,
  participants ARRAY DEFAULT '{}'::uuid[],
  started_at timestamp with time zone,
  ended_at timestamp with time zone,
  duration_seconds integer,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT calls_pkey PRIMARY KEY (id),
  CONSTRAINT calls_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id),
  CONSTRAINT calls_caller_id_fkey FOREIGN KEY (caller_id) REFERENCES public.users(id)
);
CREATE TABLE public.comments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  post_id uuid,
  user_id uuid,
  parent_id uuid,
  content text NOT NULL,
  media_urls ARRAY DEFAULT '{}'::text[],
  stats jsonb DEFAULT '{"likes": 0, "replies": 0}'::jsonb,
  is_reported boolean DEFAULT false,
  is_hidden boolean DEFAULT false,
  is_edited boolean DEFAULT false,
  edited_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT comments_pkey PRIMARY KEY (id),
  CONSTRAINT comments_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id),
  CONSTRAINT comments_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT comments_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.comments(id)
);
CREATE TABLE public.communities (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  creator_id uuid,
  name character varying NOT NULL,
  description text,
  avatar_url text,
  cover_url text,
  is_private boolean DEFAULT false,
  requires_approval boolean DEFAULT false,
  is_verified boolean DEFAULT false,
  category character varying,
  tags ARRAY DEFAULT '{}'::text[],
  location character varying,
  city character varying,
  uf character varying,
  member_count integer DEFAULT 0,
  post_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT communities_pkey PRIMARY KEY (id),
  CONSTRAINT communities_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.users(id)
);
CREATE TABLE public.community_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  community_id uuid,
  user_id uuid,
  role character varying DEFAULT 'member'::character varying CHECK (role::text = ANY (ARRAY['owner'::character varying, 'admin'::character varying, 'moderator'::character varying, 'member'::character varying]::text[])),
  can_post boolean DEFAULT true,
  can_comment boolean DEFAULT true,
  can_invite boolean DEFAULT false,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'banned'::character varying, 'left'::character varying]::text[])),
  joined_at timestamp with time zone DEFAULT now(),
  left_at timestamp with time zone,
  CONSTRAINT community_members_pkey PRIMARY KEY (id),
  CONSTRAINT community_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT community_members_community_id_fkey FOREIGN KEY (community_id) REFERENCES public.communities(id)
);
CREATE TABLE public.content_purchases (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  buyer_id uuid,
  content_id uuid,
  amount_paid numeric NOT NULL,
  original_price numeric NOT NULL,
  discount_applied numeric DEFAULT 0,
  currency character varying DEFAULT 'BRL'::character varying,
  payment_method USER-DEFINED NOT NULL,
  payment_reference character varying,
  platform_fee numeric NOT NULL,
  platform_fee_percentage numeric NOT NULL,
  creator_revenue numeric NOT NULL,
  access_expires_at timestamp with time zone,
  download_count integer DEFAULT 0,
  max_downloads integer DEFAULT 3,
  last_accessed timestamp with time zone,
  status character varying DEFAULT 'completed'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'completed'::character varying, 'refunded'::character varying, 'disputed'::character varying]::text[])),
  refund_reason text,
  refunded_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT content_purchases_pkey PRIMARY KEY (id),
  CONSTRAINT content_purchases_buyer_id_fkey FOREIGN KEY (buyer_id) REFERENCES public.users(id),
  CONSTRAINT content_purchases_content_id_fkey FOREIGN KEY (content_id) REFERENCES public.paid_content(id)
);
CREATE TABLE public.content_reviews (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  content_id uuid,
  buyer_id uuid,
  purchase_id uuid,
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  comment text,
  helpful_count integer DEFAULT 0,
  unhelpful_count integer DEFAULT 0,
  is_verified_purchase boolean DEFAULT true,
  is_hidden boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT content_reviews_pkey PRIMARY KEY (id),
  CONSTRAINT content_reviews_buyer_id_fkey FOREIGN KEY (buyer_id) REFERENCES public.users(id),
  CONSTRAINT content_reviews_content_id_fkey FOREIGN KEY (content_id) REFERENCES public.paid_content(id),
  CONSTRAINT content_reviews_purchase_id_fkey FOREIGN KEY (purchase_id) REFERENCES public.content_purchases(id)
);
CREATE TABLE public.conversation_participants (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  conversation_id uuid,
  user_id uuid,
  role character varying DEFAULT 'member'::character varying CHECK (role::text = ANY (ARRAY['admin'::character varying, 'member'::character varying]::text[])),
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'left'::character varying, 'removed'::character varying]::text[])),
  notifications_enabled boolean DEFAULT true,
  is_pinned boolean DEFAULT false,
  last_read_at timestamp with time zone DEFAULT now(),
  unread_count integer DEFAULT 0,
  joined_at timestamp with time zone DEFAULT now(),
  left_at timestamp with time zone,
  CONSTRAINT conversation_participants_pkey PRIMARY KEY (id),
  CONSTRAINT conversation_participants_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id),
  CONSTRAINT conversation_participants_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.conversations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['direct'::character varying, 'group'::character varying]::text[])),
  name character varying,
  description text,
  avatar_url text,
  created_by uuid,
  max_participants integer DEFAULT 50,
  is_archived boolean DEFAULT false,
  last_message_id uuid,
  last_message_at timestamp with time zone,
  last_message_preview text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  initiated_by uuid,
  initiated_by_premium boolean DEFAULT false,
  group_type character varying CHECK (group_type::text = ANY (ARRAY['user_created'::character varying, 'event'::character varying, 'community'::character varying]::text[])),
  CONSTRAINT conversations_pkey PRIMARY KEY (id),
  CONSTRAINT conversations_initiated_by_fkey FOREIGN KEY (initiated_by) REFERENCES public.users(id),
  CONSTRAINT conversations_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.couple_album_photos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  album_id uuid NOT NULL,
  couple_id uuid NOT NULL,
  uploaded_by uuid NOT NULL,
  photo_url text NOT NULL,
  thumbnail_url text,
  caption text,
  location character varying,
  latitude numeric,
  longitude numeric,
  file_size integer,
  file_type character varying,
  width integer,
  height integer,
  taken_at timestamp with time zone,
  uploaded_at timestamp with time zone DEFAULT now(),
  CONSTRAINT couple_album_photos_pkey PRIMARY KEY (id),
  CONSTRAINT couple_album_photos_album_id_fkey FOREIGN KEY (album_id) REFERENCES public.couple_shared_albums(id),
  CONSTRAINT couple_album_photos_couple_id_fkey FOREIGN KEY (couple_id) REFERENCES public.couples(id),
  CONSTRAINT couple_album_photos_uploaded_by_fkey FOREIGN KEY (uploaded_by) REFERENCES public.users(id)
);
CREATE TABLE public.couple_diary_entries (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  couple_id uuid NOT NULL,
  author_id uuid NOT NULL,
  title character varying NOT NULL,
  content text NOT NULL,
  mood character varying,
  date date NOT NULL,
  is_private boolean DEFAULT false,
  visible_to character varying DEFAULT 'both'::character varying CHECK (visible_to::text = ANY (ARRAY['both'::character varying, 'author_only'::character varying, 'partner_only'::character varying]::text[])),
  photos ARRAY DEFAULT '{}'::text[],
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT couple_diary_entries_pkey PRIMARY KEY (id),
  CONSTRAINT couple_diary_entries_couple_id_fkey FOREIGN KEY (couple_id) REFERENCES public.couples(id),
  CONSTRAINT couple_diary_entries_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.users(id)
);
CREATE TABLE public.couple_game_sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  couple_id uuid NOT NULL,
  game_id uuid NOT NULL,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'completed'::character varying, 'abandoned'::character varying]::text[])),
  score_user1 integer DEFAULT 0,
  score_user2 integer DEFAULT 0,
  current_round integer DEFAULT 1,
  total_rounds integer DEFAULT 1,
  game_data jsonb DEFAULT '{}'::jsonb,
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  last_activity_at timestamp with time zone DEFAULT now(),
  CONSTRAINT couple_game_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT couple_game_sessions_couple_id_fkey FOREIGN KEY (couple_id) REFERENCES public.couples(id),
  CONSTRAINT couple_game_sessions_game_id_fkey FOREIGN KEY (game_id) REFERENCES public.couple_games(id)
);
CREATE TABLE public.couple_games (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  category character varying,
  min_duration_minutes integer,
  max_duration_minutes integer,
  difficulty_level integer CHECK (difficulty_level >= 1 AND difficulty_level <= 5),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT couple_games_pkey PRIMARY KEY (id)
);
CREATE TABLE public.couple_invitations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  from_user_id uuid NOT NULL,
  to_user_id uuid,
  to_email character varying,
  to_phone character varying,
  message text NOT NULL,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'accepted'::character varying, 'declined'::character varying, 'expired'::character varying]::text[])),
  expires_at timestamp with time zone NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT couple_invitations_pkey PRIMARY KEY (id),
  CONSTRAINT couple_invitations_from_user_id_fkey FOREIGN KEY (from_user_id) REFERENCES public.users(id),
  CONSTRAINT couple_invitations_to_user_id_fkey FOREIGN KEY (to_user_id) REFERENCES public.users(id)
);
CREATE TABLE public.couple_payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  couple_id uuid NOT NULL,
  payer_user_id uuid NOT NULL,
  subscription_id uuid,
  amount numeric NOT NULL DEFAULT 69.90,
  currency character varying DEFAULT 'BRL'::character varying,
  payment_method USER-DEFINED NOT NULL,
  provider USER-DEFINED NOT NULL,
  provider_subscription_id character varying,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'cancelled'::character varying, 'expired'::character varying, 'trial'::character varying]::text[])),
  current_period_start timestamp with time zone,
  current_period_end timestamp with time zone,
  trial_ends_at timestamp with time zone,
  cancelled_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT couple_payments_pkey PRIMARY KEY (id),
  CONSTRAINT couple_payments_couple_id_fkey FOREIGN KEY (couple_id) REFERENCES public.couples(id),
  CONSTRAINT couple_payments_payer_user_id_fkey FOREIGN KEY (payer_user_id) REFERENCES public.users(id),
  CONSTRAINT couple_payments_subscription_id_fkey FOREIGN KEY (subscription_id) REFERENCES public.subscriptions(id)
);
CREATE TABLE public.couple_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  couple_id uuid NOT NULL UNIQUE,
  shared_profile boolean DEFAULT true,
  shared_stats boolean DEFAULT true,
  allow_partner_posting boolean DEFAULT false,
  auto_tag_partner boolean DEFAULT false,
  shared_calendar boolean DEFAULT true,
  notifications jsonb DEFAULT '{"couple_games": true, "partner_posts": true, "shared_memories": true, "anniversary_reminders": true}'::jsonb,
  privacy jsonb DEFAULT '{"diary_access": "both", "stats_sharing": true, "album_visibility": "couple_only"}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT couple_settings_pkey PRIMARY KEY (id),
  CONSTRAINT couple_settings_couple_id_fkey FOREIGN KEY (couple_id) REFERENCES public.couples(id)
);
CREATE TABLE public.couple_shared_albums (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  couple_id uuid NOT NULL,
  name character varying DEFAULT 'Nosso Álbum'::character varying,
  description text,
  cover_image_url text,
  is_private boolean DEFAULT true,
  created_by uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT couple_shared_albums_pkey PRIMARY KEY (id),
  CONSTRAINT couple_shared_albums_couple_id_fkey FOREIGN KEY (couple_id) REFERENCES public.couples(id),
  CONSTRAINT couple_shared_albums_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.couple_users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  couple_id uuid NOT NULL,
  user_id uuid NOT NULL,
  role character varying DEFAULT 'secondary'::character varying CHECK (role::text = ANY (ARRAY['primary'::character varying, 'secondary'::character varying]::text[])),
  joined_at timestamp with time zone DEFAULT now(),
  CONSTRAINT couple_users_pkey PRIMARY KEY (id),
  CONSTRAINT couple_users_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT couple_users_couple_id_fkey FOREIGN KEY (couple_id) REFERENCES public.couples(id)
);
CREATE TABLE public.couples (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  couple_name character varying,
  couple_avatar_url text,
  couple_cover_url text,
  anniversary_date date,
  bio text,
  shared_album_id uuid,
  shared_diary_id uuid,
  shared_playlist_url text,
  status character varying DEFAULT 'active'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT couples_pkey PRIMARY KEY (id)
);
CREATE TABLE public.creator_subscriptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  subscriber_id uuid,
  creator_id uuid,
  business_id uuid,
  tier character varying NOT NULL,
  price numeric NOT NULL,
  billing_period USER-DEFINED NOT NULL,
  status USER-DEFINED DEFAULT 'active'::subscription_status,
  benefits jsonb DEFAULT '{}'::jsonb,
  payment_method USER-DEFINED,
  last_payment_date timestamp with time zone,
  next_payment_date timestamp with time zone,
  current_period_start timestamp with time zone,
  current_period_end timestamp with time zone,
  cancelled_at timestamp with time zone,
  cancellation_reason text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT creator_subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT creator_subscriptions_subscriber_id_fkey FOREIGN KEY (subscriber_id) REFERENCES public.users(id),
  CONSTRAINT creator_subscriptions_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.users(id),
  CONSTRAINT creator_subscriptions_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id)
);
CREATE TABLE public.credit_costs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  action_type character varying NOT NULL UNIQUE,
  category character varying NOT NULL,
  credit_cost integer NOT NULL,
  unit character varying DEFAULT 'unit'::character varying,
  is_active boolean DEFAULT true,
  min_purchase integer DEFAULT 1,
  max_purchase integer,
  name character varying NOT NULL,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT credit_costs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.credit_packages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  credits integer NOT NULL,
  bonus_credits integer DEFAULT 0,
  price numeric NOT NULL,
  is_active boolean DEFAULT true,
  is_promotional boolean DEFAULT false,
  valid_until timestamp with time zone,
  description text,
  features ARRAY DEFAULT '{}'::text[],
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT credit_packages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.credit_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_id uuid,
  type USER-DEFINED NOT NULL,
  amount integer NOT NULL,
  balance_before integer NOT NULL,
  balance_after integer NOT NULL,
  description text NOT NULL,
  reference_id uuid,
  reference_type character varying,
  package_id uuid,
  payment_method USER-DEFINED,
  payment_amount numeric,
  payment_status character varying,
  payment_reference character varying,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT credit_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT credit_transactions_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT credit_transactions_package_id_fkey FOREIGN KEY (package_id) REFERENCES public.credit_packages(id)
);
CREATE TABLE public.dating_matches (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user1_id uuid,
  user2_id uuid,
  status USER-DEFINED DEFAULT 'active'::match_status,
  match_type character varying DEFAULT 'regular'::character varying CHECK (match_type::text = ANY (ARRAY['regular'::character varying, 'super_like'::character varying, 'top_pick'::character varying]::text[])),
  last_interaction timestamp with time zone,
  total_messages integer DEFAULT 0,
  conversation_id uuid,
  unmatched_by uuid,
  unmatched_at timestamp with time zone,
  unmatch_reason character varying,
  created_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone DEFAULT (now() + '30 days'::interval),
  CONSTRAINT dating_matches_pkey PRIMARY KEY (id),
  CONSTRAINT dating_matches_unmatched_by_fkey FOREIGN KEY (unmatched_by) REFERENCES public.users(id),
  CONSTRAINT dating_matches_user1_id_fkey FOREIGN KEY (user1_id) REFERENCES public.users(id),
  CONSTRAINT dating_matches_user2_id_fkey FOREIGN KEY (user2_id) REFERENCES public.users(id),
  CONSTRAINT dating_matches_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id)
);
CREATE TABLE public.dating_profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid UNIQUE,
  is_active boolean DEFAULT true,
  visibility character varying DEFAULT 'visible'::character varying CHECK (visibility::text = ANY (ARRAY['visible'::character varying, 'hidden'::character varying, 'paused'::character varying]::text[])),
  last_active timestamp with time zone DEFAULT now(),
  preferences jsonb NOT NULL DEFAULT '{"genders": [], "distance": 50, "age_range": {"max": 99, "min": 18}, "interests": [], "languages": ["pt"], "distance_unit": "km", "relationship_goals": [], "show_me_in_searches": true}'::jsonb,
  bio text,
  prompts jsonb DEFAULT '[]'::jsonb,
  photos jsonb DEFAULT '[]'::jsonb,
  photo_verified boolean DEFAULT false,
  photo_verified_at timestamp with time zone,
  current_location point,
  current_location_name character varying,
  passport_location point,
  passport_location_name character varying,
  daily_likes_limit integer DEFAULT 50,
  daily_likes_used integer DEFAULT 0,
  daily_super_likes_limit integer DEFAULT 5,
  daily_super_likes_used integer DEFAULT 0,
  daily_rewinds_limit integer DEFAULT 3,
  daily_rewinds_used integer DEFAULT 0,
  last_limit_reset date DEFAULT CURRENT_DATE,
  boost_active boolean DEFAULT false,
  boost_expires_at timestamp with time zone,
  stats jsonb DEFAULT '{"profile_views": 0, "total_matches": 0, "conversion_rate": 0, "total_likes_given": 0, "total_messages_sent": 0, "total_likes_received": 0, "total_messages_received": 0, "total_super_likes_given": 0, "total_super_likes_received": 0}'::jsonb,
  settings jsonb DEFAULT '{"show_age": true, "smart_photos": false, "show_distance": true, "auto_play_videos": true, "show_recently_active": true, "top_picks_notifications": true}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT dating_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT dating_profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.dating_swipes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  swiper_id uuid,
  swiped_id uuid,
  action USER-DEFINED NOT NULL,
  shown_at timestamp with time zone DEFAULT now(),
  swiped_at timestamp with time zone DEFAULT now(),
  time_to_swipe integer,
  is_match boolean DEFAULT false,
  matched_at timestamp with time zone,
  match_id uuid,
  swiper_location point,
  distance_km double precision,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT dating_swipes_pkey PRIMARY KEY (id),
  CONSTRAINT dating_swipes_match_id_fkey FOREIGN KEY (match_id) REFERENCES public.dating_matches(id),
  CONSTRAINT dating_swipes_swiped_id_fkey FOREIGN KEY (swiped_id) REFERENCES public.users(id),
  CONSTRAINT dating_swipes_swiper_id_fkey FOREIGN KEY (swiper_id) REFERENCES public.users(id)
);
CREATE TABLE public.dating_top_picks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  pick_user_id uuid,
  score double precision NOT NULL,
  reasons ARRAY DEFAULT '{}'::text[],
  is_viewed boolean DEFAULT false,
  is_swiped boolean DEFAULT false,
  swipe_action USER-DEFINED,
  valid_until timestamp with time zone DEFAULT (now() + '24:00:00'::interval),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT dating_top_picks_pkey PRIMARY KEY (id),
  CONSTRAINT dating_top_picks_pick_user_id_fkey FOREIGN KEY (pick_user_id) REFERENCES public.users(id),
  CONSTRAINT dating_top_picks_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.event_participants (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_id uuid,
  user_id uuid,
  status character varying DEFAULT 'interested'::character varying CHECK (status::text = ANY (ARRAY['interested'::character varying, 'going'::character varying, 'maybe'::character varying]::text[])),
  guest_count integer DEFAULT 0,
  guest_names ARRAY DEFAULT '{}'::text[],
  joined_at timestamp with time zone DEFAULT now(),
  CONSTRAINT event_participants_pkey PRIMARY KEY (id),
  CONSTRAINT event_participants_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT event_participants_event_id_fkey FOREIGN KEY (event_id) REFERENCES public.events(id)
);
CREATE TABLE public.events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  creator_id uuid,
  title character varying NOT NULL,
  description text,
  cover_image_url text,
  event_type USER-DEFINED NOT NULL,
  category character varying,
  tags ARRAY DEFAULT '{}'::text[],
  start_date timestamp with time zone NOT NULL,
  end_date timestamp with time zone,
  timezone character varying DEFAULT 'America/Sao_Paulo'::character varying,
  is_online boolean DEFAULT false,
  location_name character varying,
  location_address text,
  latitude numeric,
  longitude numeric,
  online_link text,
  max_participants integer,
  current_participants integer DEFAULT 0,
  requires_approval boolean DEFAULT false,
  allows_guests boolean DEFAULT true,
  is_paid boolean DEFAULT false,
  price numeric,
  currency character varying DEFAULT 'BRL'::character varying,
  visibility USER-DEFINED DEFAULT 'public'::visibility_type,
  min_age integer,
  max_age integer,
  gender_restriction USER-DEFINED,
  stats jsonb DEFAULT '{"going": 0, "maybe": 0, "interested": 0}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT events_pkey PRIMARY KEY (id),
  CONSTRAINT events_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.users(id)
);
CREATE TABLE public.financial_reports (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  report_type character varying NOT NULL CHECK (report_type::text = ANY (ARRAY['daily'::character varying, 'weekly'::character varying, 'monthly'::character varying, 'quarterly'::character varying, 'yearly'::character varying]::text[])),
  period_start date NOT NULL,
  period_end date NOT NULL,
  revenue jsonb NOT NULL DEFAULT '{"total": 0, "content": {"commission": 0, "sales_count": 0, "gross_amount": 0}, "credits": {"amount": 0, "packages_sold": 0}, "subscriptions": {"gold": {"count": 0, "amount": 0}, "couple": {"count": 0, "amount": 0}, "diamond": {"count": 0, "amount": 0}}}'::jsonb,
  expenses jsonb DEFAULT '{"refunds": 0, "chargebacks": 0, "operational": 0, "payment_processing": 0}'::jsonb,
  metrics jsonb DEFAULT '{"cac": 0, "ltv": 0, "mrr": 0, "arpu": 0, "churn_rate": 0, "growth_rate": 0}'::jsonb,
  is_final boolean DEFAULT false,
  generated_by uuid,
  generated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT financial_reports_pkey PRIMARY KEY (id),
  CONSTRAINT financial_reports_generated_by_fkey FOREIGN KEY (generated_by) REFERENCES public.admin_users(id)
);
CREATE TABLE public.follows (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  follower_id uuid,
  following_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT follows_pkey PRIMARY KEY (id),
  CONSTRAINT follows_following_id_fkey FOREIGN KEY (following_id) REFERENCES public.users(id),
  CONSTRAINT follows_follower_id_fkey FOREIGN KEY (follower_id) REFERENCES public.users(id)
);
CREATE TABLE public.friends (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  friend_id uuid,
  status USER-DEFINED DEFAULT 'pending'::friend_status,
  created_at timestamp with time zone DEFAULT now(),
  accepted_at timestamp with time zone,
  CONSTRAINT friends_pkey PRIMARY KEY (id),
  CONSTRAINT friends_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT friends_friend_id_fkey FOREIGN KEY (friend_id) REFERENCES public.users(id)
);
CREATE TABLE public.likes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  target_id uuid NOT NULL,
  target_type character varying NOT NULL CHECK (target_type::text = ANY (ARRAY['post'::character varying, 'comment'::character varying]::text[])),
  reaction_type character varying DEFAULT 'like'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT likes_pkey PRIMARY KEY (id),
  CONSTRAINT likes_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.message_reactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  message_id uuid,
  user_id uuid,
  reaction character varying NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT message_reactions_pkey PRIMARY KEY (id),
  CONSTRAINT message_reactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT message_reactions_message_id_fkey FOREIGN KEY (message_id) REFERENCES public.messages(id)
);
CREATE TABLE public.messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  conversation_id uuid,
  sender_id uuid,
  content text,
  type USER-DEFINED DEFAULT 'text'::message_type,
  media_urls ARRAY DEFAULT '{}'::text[],
  reply_to_id uuid,
  is_edited boolean DEFAULT false,
  edited_at timestamp with time zone,
  is_deleted boolean DEFAULT false,
  deleted_at timestamp with time zone,
  delivered_at timestamp with time zone,
  is_read boolean DEFAULT false,
  read_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT messages_pkey PRIMARY KEY (id),
  CONSTRAINT messages_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id),
  CONSTRAINT messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.users(id),
  CONSTRAINT messages_reply_to_id_fkey FOREIGN KEY (reply_to_id) REFERENCES public.messages(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  recipient_id uuid,
  sender_id uuid,
  type character varying NOT NULL,
  title text NOT NULL,
  content text,
  icon character varying,
  related_data jsonb DEFAULT '{}'::jsonb,
  action_url text,
  is_read boolean DEFAULT false,
  read_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.users(id),
  CONSTRAINT notifications_recipient_id_fkey FOREIGN KEY (recipient_id) REFERENCES public.users(id)
);
CREATE TABLE public.paid_content (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  creator_id uuid,
  business_id uuid,
  title character varying NOT NULL,
  slug character varying UNIQUE,
  description text,
  category USER-DEFINED NOT NULL,
  subcategory character varying,
  tags ARRAY DEFAULT '{}'::text[],
  is_adult boolean DEFAULT false,
  preview_urls ARRAY NOT NULL,
  preview_type character varying,
  content_urls ARRAY NOT NULL,
  content_type USER-DEFINED NOT NULL,
  duration integer,
  file_sizes ARRAY,
  dimensions jsonb,
  item_count integer DEFAULT 1,
  price numeric NOT NULL,
  original_price numeric,
  currency character varying DEFAULT 'BRL'::character varying,
  discount_percentage integer CHECK (discount_percentage >= 0 AND discount_percentage <= 90),
  discount_valid_until timestamp with time zone,
  promo_code character varying,
  sales_count integer DEFAULT 0,
  total_revenue numeric DEFAULT 0,
  views_count integer DEFAULT 0,
  likes_count integer DEFAULT 0,
  rating_average numeric DEFAULT 0,
  rating_count integer DEFAULT 0,
  settings jsonb DEFAULT '{"watermark": true, "allow_ratings": true, "drm_protected": false, "allow_comments": true, "allow_downloads": false}'::jsonb,
  is_exclusive boolean DEFAULT false,
  available_until timestamp with time zone,
  stock_limit integer,
  stock_sold integer DEFAULT 0,
  status USER-DEFINED DEFAULT 'draft'::content_status,
  rejection_reason text,
  meta_description text,
  meta_keywords ARRAY,
  published_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT paid_content_pkey PRIMARY KEY (id),
  CONSTRAINT paid_content_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT paid_content_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.users(id)
);
CREATE TABLE public.payment_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  subscription_id uuid,
  amount numeric NOT NULL,
  currency character varying DEFAULT 'BRL'::character varying,
  payment_method USER-DEFINED NOT NULL,
  provider USER-DEFINED NOT NULL,
  provider_payment_id character varying,
  status character varying NOT NULL CHECK (status::text = ANY (ARRAY['pending'::character varying, 'completed'::character varying, 'failed'::character varying, 'refunded'::character varying]::text[])),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT payment_history_pkey PRIMARY KEY (id),
  CONSTRAINT payment_history_subscription_id_fkey FOREIGN KEY (subscription_id) REFERENCES public.subscriptions(id),
  CONSTRAINT payment_history_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.poll_votes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  poll_id uuid,
  user_id uuid,
  option_ids ARRAY NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT poll_votes_pkey PRIMARY KEY (id),
  CONSTRAINT poll_votes_poll_id_fkey FOREIGN KEY (poll_id) REFERENCES public.polls(id),
  CONSTRAINT poll_votes_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.polls (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  creator_id uuid,
  question text NOT NULL,
  options jsonb NOT NULL,
  max_options integer DEFAULT 2 CHECK (max_options >= 2 AND max_options <= 4),
  allows_multiple boolean DEFAULT false,
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT polls_pkey PRIMARY KEY (id),
  CONSTRAINT polls_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.users(id)
);
CREATE TABLE public.post_reports (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  reporter_id uuid,
  post_id uuid,
  reason character varying NOT NULL,
  description text,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'reviewed'::character varying, 'resolved'::character varying, 'dismissed'::character varying]::text[])),
  reviewed_by uuid,
  reviewed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT post_reports_pkey PRIMARY KEY (id),
  CONSTRAINT post_reports_reporter_id_fkey FOREIGN KEY (reporter_id) REFERENCES public.users(id),
  CONSTRAINT post_reports_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id),
  CONSTRAINT post_reports_reviewed_by_fkey FOREIGN KEY (reviewed_by) REFERENCES public.users(id)
);
CREATE TABLE public.posts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  couple_id uuid,
  content text,
  media_urls ARRAY DEFAULT '{}'::text[],
  media_types ARRAY DEFAULT '{}'::text[],
  media_thumbnails ARRAY DEFAULT '{}'::text[],
  visibility USER-DEFINED DEFAULT 'public'::visibility_type,
  is_premium_content boolean DEFAULT false,
  price numeric,
  poll_id uuid,
  location character varying,
  latitude numeric,
  longitude numeric,
  hashtags ARRAY DEFAULT '{}'::text[],
  mentions ARRAY DEFAULT '{}'::text[],
  post_type USER-DEFINED DEFAULT 'regular'::post_type,
  story_expires_at timestamp with time zone,
  is_event boolean DEFAULT false,
  event_id uuid,
  stats jsonb DEFAULT '{"likes_count": 0, "views_count": 0, "shares_count": 0, "comments_count": 0}'::jsonb,
  is_reported boolean DEFAULT false,
  is_hidden boolean DEFAULT false,
  report_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT posts_pkey PRIMARY KEY (id),
  CONSTRAINT posts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT posts_event_id_fkey FOREIGN KEY (event_id) REFERENCES public.events(id),
  CONSTRAINT posts_poll_id_fkey FOREIGN KEY (poll_id) REFERENCES public.polls(id),
  CONSTRAINT posts_couple_id_fkey FOREIGN KEY (couple_id) REFERENCES public.couples(id)
);
CREATE TABLE public.profile_seals (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  icon_url text NOT NULL,
  description text,
  credit_cost integer NOT NULL,
  is_available boolean DEFAULT true,
  available_until timestamp with time zone,
  display_order integer DEFAULT 0,
  category character varying,
  times_gifted integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT profile_seals_pkey PRIMARY KEY (id)
);
CREATE TABLE public.profile_views (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  viewer_id uuid,
  viewed_id uuid,
  view_source character varying,
  anonymous boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT profile_views_pkey PRIMARY KEY (id),
  CONSTRAINT profile_views_viewed_id_fkey FOREIGN KEY (viewed_id) REFERENCES public.users(id),
  CONSTRAINT profile_views_viewer_id_fkey FOREIGN KEY (viewer_id) REFERENCES public.users(id)
);
CREATE TABLE public.saved_posts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  post_id uuid,
  folder_name character varying DEFAULT 'default'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT saved_posts_pkey PRIMARY KEY (id),
  CONSTRAINT saved_posts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT saved_posts_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id)
);
CREATE TABLE public.stories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  media_url text NOT NULL,
  media_type character varying NOT NULL CHECK (media_type::text = ANY (ARRAY['image'::character varying, 'video'::character varying]::text[])),
  thumbnail_url text,
  caption text,
  duration integer DEFAULT 5,
  width integer,
  height integer,
  file_size integer,
  is_public boolean DEFAULT true,
  is_highlighted boolean DEFAULT false,
  highlight_color character varying,
  is_boosted boolean DEFAULT false,
  boost_expires_at timestamp with time zone,
  boost_credits_spent integer DEFAULT 0,
  boost_impressions integer DEFAULT 0,
  view_count integer DEFAULT 0,
  unique_view_count integer DEFAULT 0,
  reaction_count integer DEFAULT 0,
  reply_count integer DEFAULT 0,
  status USER-DEFINED DEFAULT 'active'::story_status,
  expires_at timestamp with time zone DEFAULT (now() + '24:00:00'::interval),
  created_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT stories_pkey PRIMARY KEY (id),
  CONSTRAINT stories_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.story_boosts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  story_id uuid,
  user_id uuid,
  credits_spent integer NOT NULL,
  boost_duration_hours integer NOT NULL DEFAULT 24,
  impressions_gained integer DEFAULT 0,
  clicks_gained integer DEFAULT 0,
  profile_visits_gained integer DEFAULT 0,
  priority_score integer DEFAULT 100,
  is_active boolean DEFAULT true,
  expires_at timestamp with time zone NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT story_boosts_pkey PRIMARY KEY (id),
  CONSTRAINT story_boosts_story_id_fkey FOREIGN KEY (story_id) REFERENCES public.stories(id),
  CONSTRAINT story_boosts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.story_daily_limits (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid UNIQUE,
  daily_limit integer NOT NULL,
  stories_posted_today integer DEFAULT 0,
  last_reset_date date DEFAULT CURRENT_DATE,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT story_daily_limits_pkey PRIMARY KEY (id),
  CONSTRAINT story_daily_limits_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.story_replies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  story_id uuid,
  sender_id uuid,
  message text NOT NULL,
  media_url text,
  media_type character varying CHECK (media_type::text = ANY (ARRAY['image'::character varying, 'video'::character varying, 'gif'::character varying]::text[])),
  is_read boolean DEFAULT false,
  read_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT story_replies_pkey PRIMARY KEY (id),
  CONSTRAINT story_replies_story_id_fkey FOREIGN KEY (story_id) REFERENCES public.stories(id),
  CONSTRAINT story_replies_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.users(id)
);
CREATE TABLE public.story_views (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  story_id uuid,
  viewer_id uuid,
  viewer_type USER-DEFINED DEFAULT 'regular'::story_viewer_type,
  viewed_at timestamp with time zone DEFAULT now(),
  view_duration integer,
  completion_rate numeric,
  reaction USER-DEFINED,
  reacted_at timestamp with time zone,
  device_type character varying,
  ip_address inet,
  CONSTRAINT story_views_pkey PRIMARY KEY (id),
  CONSTRAINT story_views_story_id_fkey FOREIGN KEY (story_id) REFERENCES public.stories(id),
  CONSTRAINT story_views_viewer_id_fkey FOREIGN KEY (viewer_id) REFERENCES public.users(id)
);
CREATE TABLE public.subscriptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  plan_type USER-DEFINED NOT NULL,
  billing_period USER-DEFINED NOT NULL,
  payment_method USER-DEFINED NOT NULL,
  provider USER-DEFINED NOT NULL,
  provider_subscription_id character varying,
  amount numeric NOT NULL,
  discount_percentage integer DEFAULT 0,
  final_amount numeric NOT NULL,
  status USER-DEFINED DEFAULT 'active'::subscription_status,
  trial_ends_at timestamp with time zone,
  current_period_start timestamp with time zone,
  current_period_end timestamp with time zone,
  cancelled_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT subscriptions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.trending_boosts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  boost_type character varying NOT NULL CHECK (boost_type::text = ANY (ARRAY['trending_feed'::character varying, 'explore_page'::character varying, 'open_date'::character varying]::text[])),
  credits_spent integer NOT NULL,
  duration_hours integer NOT NULL,
  impressions_gained integer DEFAULT 0,
  interactions_gained integer DEFAULT 0,
  is_active boolean DEFAULT true,
  expires_at timestamp with time zone NOT NULL,
  priority_score integer DEFAULT 100,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT trending_boosts_pkey PRIMARY KEY (id),
  CONSTRAINT trending_boosts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.user_credit_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['purchase'::character varying, 'spend'::character varying, 'gift_sent'::character varying, 'gift_received'::character varying, 'refund'::character varying, 'bonus'::character varying]::text[])),
  amount integer NOT NULL,
  balance_before integer NOT NULL,
  balance_after integer NOT NULL,
  reference_type character varying,
  reference_id uuid,
  other_user_id uuid,
  payment_method USER-DEFINED,
  payment_amount numeric,
  payment_reference character varying,
  description text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_credit_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT user_credit_transactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT user_credit_transactions_other_user_id_fkey FOREIGN KEY (other_user_id) REFERENCES public.users(id)
);
CREATE TABLE public.user_credits (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid UNIQUE,
  credit_balance integer DEFAULT 0 CHECK (credit_balance >= 0),
  total_purchased integer DEFAULT 0,
  total_spent integer DEFAULT 0,
  total_gifted integer DEFAULT 0,
  total_received integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_credits_pkey PRIMARY KEY (id),
  CONSTRAINT user_credits_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.user_profile_seals (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  recipient_id uuid,
  sender_id uuid,
  seal_id uuid,
  message text,
  is_displayed boolean DEFAULT true,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone,
  CONSTRAINT user_profile_seals_pkey PRIMARY KEY (id),
  CONSTRAINT user_profile_seals_recipient_id_fkey FOREIGN KEY (recipient_id) REFERENCES public.users(id),
  CONSTRAINT user_profile_seals_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.users(id),
  CONSTRAINT user_profile_seals_seal_id_fkey FOREIGN KEY (seal_id) REFERENCES public.profile_seals(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  auth_id uuid UNIQUE,
  username character varying NOT NULL UNIQUE,
  email character varying NOT NULL UNIQUE,
  name character varying,
  first_name character varying,
  last_name character varying,
  bio text,
  birth_date date,
  gender USER-DEFINED,
  profile_type USER-DEFINED DEFAULT 'single'::profile_type,
  location character varying,
  city character varying,
  uf character varying,
  state character varying,
  country character varying DEFAULT 'Brazil'::character varying,
  latitude numeric,
  longitude numeric,
  avatar_url text,
  cover_url text,
  interests ARRAY DEFAULT '{}'::text[],
  seeking ARRAY DEFAULT '{}'::text[],
  looking_for ARRAY DEFAULT '{}'::text[],
  relationship_goals ARRAY DEFAULT '{}'::text[],
  is_premium boolean DEFAULT false,
  premium_type USER-DEFINED DEFAULT 'free'::premium_type,
  premium_status USER-DEFINED DEFAULT 'inactive'::premium_status,
  premium_expires_at timestamp with time zone,
  stripe_customer_id character varying,
  abacatepay_customer_id character varying,
  is_verified boolean DEFAULT false,
  verified_at timestamp with time zone,
  is_active boolean DEFAULT true,
  status USER-DEFINED DEFAULT 'active'::user_status,
  role USER-DEFINED DEFAULT 'user'::user_role,
  couple_id uuid,
  is_in_couple boolean DEFAULT false,
  daily_message_limit integer DEFAULT 0,
  daily_messages_sent integer DEFAULT 0,
  monthly_photo_limit integer DEFAULT 3,
  monthly_photos_uploaded integer DEFAULT 0,
  monthly_video_limit integer DEFAULT 0,
  monthly_videos_uploaded integer DEFAULT 0,
  monthly_events_created integer DEFAULT 0,
  privacy_settings jsonb DEFAULT '{"show_ads": true, "show_age": true, "show_location": true, "allow_messages": "everyone", "show_last_active": true, "profile_visibility": "public", "show_online_status": true}'::jsonb,
  notification_settings jsonb DEFAULT '{"like_notifications": true, "push_notifications": true, "email_notifications": true, "event_notifications": true, "follow_notifications": true, "comment_notifications": true, "message_notifications": true}'::jsonb,
  stats jsonb DEFAULT '{"posts": 0, "friends": 0, "followers": 0, "following": 0, "profile_views": 0, "likes_received": 0}'::jsonb,
  website character varying,
  social_links jsonb DEFAULT '{}'::jsonb,
  last_active_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  account_type USER-DEFINED DEFAULT 'personal'::account_type,
  business_id uuid,
  admin_id uuid,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT fk_users_business FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT users_auth_id_fkey FOREIGN KEY (auth_id) REFERENCES auth.users(id),
  CONSTRAINT users_couple_id_fkey FOREIGN KEY (couple_id) REFERENCES public.couples(id)
);
CREATE TABLE public.verification_requests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  document_type character varying,
  document_front_url text,
  document_back_url text,
  selfie_url text,
  verification_code character varying,
  status USER-DEFINED DEFAULT 'pending'::verification_status,
  reviewed_by uuid,
  reviewed_at timestamp with time zone,
  rejection_reason text,
  notes text,
  attempt_number integer DEFAULT 1,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT verification_requests_pkey PRIMARY KEY (id),
  CONSTRAINT verification_requests_reviewed_by_fkey FOREIGN KEY (reviewed_by) REFERENCES public.users(id),
  CONSTRAINT verification_requests_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);